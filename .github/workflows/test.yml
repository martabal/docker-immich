name: Test suites

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-unit-tests:
    name: Tests renderer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 #v4.3.0

      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc #v6.4.3

      - name: Install python dependencies
        run: |
          uv venv 
          uv sync

      - name: Run python linter
        run: uv run ruff check render_templates
        if: ${{ !cancelled() }}

      - name: Run python formatter
        run: uv run ruff format --check render_templates
        if: ${{ !cancelled() }}

      - name: Run tests and coverage
        run: uv run pytest render_templates
        if: ${{ !cancelled() }}

  Linter:
    name: Run linters
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flavor: ["armnn", "cpu", "cuda", "noml", "openvino", "rknn"]

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 #v4.3.0

      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc #v6.4.3

      - name: Install python dependencies
        run: |
          uv venv
          uv pip install -r pyproject.toml

      - name: Create Dockerfile from template
        run: uv run python3 -m render_templates.main --flavor ${{ matrix.flavor }}

      - name: Run Hadolint
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf #v3.1.0
        if: ${{ !cancelled() }}
        with:
          dockerfile: build-${{ matrix.flavor }}/Dockerfile

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38 #v2.0.0
        if: ${{ !cancelled() }}
        with:
          scandir: build-${{ matrix.flavor }}
          additional_files: "run"

      - name: Check Permissions
        if: ${{ !cancelled() }}
        run: |
          WRONG_PERM=$(find ./build-${{ matrix.flavor }}  -path "./.git" -prune -o \( -name "run" -o -name "finish" -o -name "check" \) -not -perm -u=x,g=x,o=x -print)
          if [ -n "${WRONG_PERM}" ]; then
            for i in ${WRONG_PERM}; do
              echo "::error file=${i},line=1,title=Missing Executable Bit::This file needs to be set as executable!"
            done
            exit 1
          else
            echo "**** All perms look good ****"
          fi

  format:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 #v4.3.0

      - name: Install prettier
        run: npm i prettier@3.6.2

      - name: Run formatter
        run: npx prettier --check .
